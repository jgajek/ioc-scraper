services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: ioc_scraper_db
    environment:
      POSTGRES_DB: iocdb
      POSTGRES_USER: iocuser
      POSTGRES_PASSWORD: ioc123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"  # Use port 5433 externally to avoid conflict
    networks:
      - scrape-network
    restart: unless-stopped

  # Flask Backend
  backend:
    build: ./backend
    container_name: ioc_scraper_backend
    environment:
      DATABASE_URL: postgresql://iocuser:ioc123@database:5432/iocdb
      FLASK_ENV: production
      SECRET_KEY: trustno1
    ports:
      - "5000:5000"
    depends_on:
      - database
    networks:
      - scrape-network
    restart: unless-stopped
    volumes:
      - ./backend:/app
    command: ["sh", "-c", "sleep 10 && python run.py"]

  # Vue.js Frontend
  frontend:
    build: ./frontend
    container_name: ioc_scraper_frontend
    expose:
      - "80"
    depends_on:
      - backend
    networks:
      - scrape-network
    restart: unless-stopped
    environment:
      VUE_APP_API_URL: /api
      # nginx-proxy configuration
      VIRTUAL_HOST: scrape.ttplabs.net
      VIRTUAL_PORT: 80
      # Let's Encrypt / acme-companion configuration
      LETSENCRYPT_HOST: scrape.ttplabs.net
      LETSENCRYPT_EMAIL: jgajek@gmail.com

networks:
  scrape-network:
    driver: bridge

volumes:
  postgres_data: 